package iudx.data.marketplace.razorpay;

import io.vertx.codegen.annotations.GenIgnore;
import io.vertx.codegen.annotations.ProxyGen;
import io.vertx.codegen.annotations.VertxGen;
import io.vertx.core.Future;
import io.vertx.core.Vertx;
import io.vertx.core.json.JsonObject;

@VertxGen @ProxyGen
public interface RazorPayService {
  /**
   * The createProxy helps the code generation blocks to generate proxy code.
   *
   * @param vertx which is the vertx instance
   * @param address which is the proxy address
   * @return RazorPayServiceVertxEBProxy which is a service proxy
   */
  @GenIgnore
  static RazorPayService createProxy(Vertx vertx, String address) {
    return new RazorPayServiceVertxEBProxy(vertx, address);
  }

  /**
   * The create order method implements the creation of an order using the razorpayClient
   *  This method also creates a transfer from the order to the respective merchant account
   *
   * @param request which is a JsonObject
   * @param User which is a User object
   * @retun Future<JsonObject> which is a vertx Future
   */
  Future<JsonObject> createOrder(JsonObject request);

  /**
   * Accepts the terms and conditions of behalf of the merchant after a linked account is created
   * <br>
   * The terms and conditions are accepted for <b>route</b> as a Razorpay product
   * @param info contains accountId generated by Razorpay
   * @return productId as success response in Future JsonObject, failure of type Future if any
   * @see  <a href="https://razorpay.com/docs/api/payments/route/linked-account-onboarding/request-product-config">Request product configuration</a>
   */
  Future<JsonObject> requestProductConfiguration(JsonObject info);

  /**
   *
   * Checks if the account is activated by the Merchant by completing the required KYC or
   * adding their bank account details
   * @param request - contains productId and accountId generated by Razorpay
   * @return  status as <i>active</i> as success response in Future JsonObject, failure if the
   * <br> status is any of (
   * <br> <i>requested</i>
   * <br> <i>needs_clarification</i>
   * <br> <i>under_review</i>
   * <br> <i>suspended</i>
   *  <br>)
   * @see  <a href="https://razorpay.com/docs/api/payments/route/linked-account-onboarding/fetch-product-config">Fetch a product configuration</a>
   */
  Future<Boolean> fetchProductConfiguration(JsonObject request);


  /**
   * Creates Linked account for the merchant through DMP in Payment Gateway
   * @param request Required details to create linked account
   * @return Future of type JsonObject as success response, failure if any
   */
  Future<JsonObject> createLinkedAccount(String request);
}
